-- SELECT adverse_action_declineReasons, lien_position, all_mortgage_count, h.mortgage_lien_position FROM reporting.lkup_application la
-- JOIN reporting.f_heloc_property_financial_history h ON h.application_uuid = la.application_uuid_value


-- SELECT DISTINCT(decline_reason_code) FROM rpt_staging.stg_uw_decline_reasons
-- -- WHERE application_uuid_value = 'c9c6b7b2-cc17-49e2-812e-6db540109c4b'
-- SELECT COUNT(*) FROM reporting.lkup_application
-- WHERE status = 'DECLINED'


WITH Credit AS (
SELECT  
  * 
FROM(
SELECT 
 -- ROW_NUMBER() OVER (PARTITION BY lca.application_uuid_value ORDER BY application_start_date DESC) AS r,
  CAST(la.application_start_date AS DATE) AS App_Start_Date,
  lca.application_uuid_value AS App_UUID,
  la.app_amount AS App_Amount,
  la.status AS App_Status,
  la.uw_decision_decision AS UW_Decision,
  r.decline_reason_code AS Decline_Code,
  r.decline_reason AS Decline_Reason,
  la.state AS State,
  COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) AS FICO,
  age AS Age,
  la.app_term AS App_Term,
  la.stated_monthly_income AS Stated_Monthly_Income,
  MTA2126,COL3211,ALM6270, IQT9425,IQM9415, IQA9415, IQF9415,ALL9220,ALL9120,ALL9121,ALL9122, MTF8169,BCC5830, BCC5838, BCX5830,ALX5830, ILN5824, BAX5030, BCX5030, RTR5030, ILN5820, AUA5820, STU5020, STU5820, MTF5820, MTS5820, HLC5820, 
  CAST(all_mortgage_count AS FLOAT64) AS All_Mortgage_Count,
  CAST(subcode AS FLOAT64) AS Experian_Subcode, 
  CASE 
  WHEN (App_Amount < 15000 
  OR 
  (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) BETWEEN 620 AND 679 AND App_Amount > 50000) 
  OR 
  (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) BETWEEN 680 AND 759 AND App_Amount > 100000)
  OR 
  (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) >=760 AND App_Amount > 150000)) AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Loan_Size_Knockout_Failure' 
  
  WHEN ((COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) BETWEEN 620 AND 679 AND  App_Amount BETWEEN 15000 AND 50000) 
  OR 
  (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) BETWEEN 680 AND 759 AND App_Amount BETWEEN 50000 AND 100000)
  OR 
  (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) >=760 AND App_Amount BETWEEN 100000 AND 150000)) AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND  r.decline_reason_code = 'DTI' AND la.pre_loan_DTI < 0.43  THEN 'Loan_Size_Knockout_Failure2' 
  
  
  WHEN ((COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) < 620 AND DATE(application_start_date) < '2020-04-28') OR (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) < 680 AND la.profile_state != 'OK' AND DATE(application_start_date) >= '2020-04-28' AND DATE(application_start_date) < '2020-05-14') 
  OR (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) < 640 AND la.profile_state != 'OK' AND DATE(application_start_date) > '2020-05-14')
  OR (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) < 720 AND la.profile_state = 'OK' AND DATE(application_start_date) >= '2020-04-28')
  OR COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) > 850 OR COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) IN (9000,9001,9002,9003))
  AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'FICO_Knockout_Failure'
  -- 
  WHEN ((COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) >= 620 AND DATE(application_start_date) < '2020-04-28') OR (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) >= 680 AND la.profile_state != 'OK' AND DATE(application_start_date) >= '2020-04-28' AND DATE(application_start_date) < '2020-05-14') 
  OR (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) >= 640 AND la.profile_state != 'OK' AND DATE(application_start_date) > '2020-05-14')
  OR (COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) >= 720 AND la.profile_state = 'OK' AND DATE(application_start_date) >= '2020-04-28'))
  AND COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) <= 850 AND COALESCE(CAST(la.credit_hard_fico AS FLOAT64), CAST(la.credit_soft_fico AS FLOAT64)) NOT IN (9000,9001,9002,9003)
  AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'CREDITSCORE' THEN 'FICO_Knockout_Failure2'
  
  WHEN MTA2126 > 0 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Delinquent_30mdy_6mo_Knockout_Failure' 
  WHEN MTA2126 <= 0 AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'MORT_TRADES_DELQ' THEN 'Delinquent_30mdy_6mo_Knockout_Failure2'
  
  WHEN COL3211 > 0 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Non_Medical_Collections_Knockout_Failure'
  WHEN COL3211 <= 0 AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED')  AND r.decline_reason_code = 'COLLECTION' THEN 'Non_Medical_Collections_Knockout_Failure2'
  
  WHEN ALM6270 >= 60 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Worst_Trade_Status_12mo_non_medical_Knockout_Failure'
  WHEN ALM6270 < 60 AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'DELQ60_12' THEN 'Worst_Trade_Status_12mo_non_medical_Knockout_Failure2'
 
  
  WHEN IQT9425 - ( IQM9415 + IQA9415 ) >= 6 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Inquiries_Num_6mo_Knockout_Failure'
  WHEN IQT9425 - ( IQM9415 + IQA9415 ) < 6 AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'INQ3MONTHS' THEN 'Inquiries_Num_6mo_Knockout_Failure2'
   
  WHEN IQF9415 > 2 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Finance_Inquiries_Num_No_Exceed_2_Knockout_Failure'
  WHEN IQF9415 <= 2 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'INQ3MONTHS' THEN 'Finance_Inquiries_Num_No_Exceed_2_Knockout_Failure2'
  
  WHEN ((ALL9220 <= 60 AND DATE(application_start_date) >= '2020-04-02') OR (ALL9220 <= 24 AND DATE(application_start_date) < '2020-04-02')) AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'No_Bankruptcy_24mo_Knockout_Failure'
  WHEN ((ALL9220 > 60 AND DATE(application_start_date) >= '2020-04-02') OR (ALL9220 > 24 AND DATE(application_start_date) < '2020-04-02')) AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code =  'BANKRUPTCY' THEN 'No_Bankruptcy_24mo_Knockout_Failure2'
 
  
  WHEN ((ALL9120 >= 1 AND ALL9120 > (ALL9121 + ALL9122) AND DATE(application_start_date) >= '2020-04-02')) AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Non_Discharged/Dismissed Bankruptcy Filings_Knockout_Failure'
  WHEN ((ALL9120 < 1 AND ALL9120 <= (ALL9121 + ALL9122) AND DATE(application_start_date) >= '2020-04-02')) AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'BANKRUPTCY' THEN 'Non_Discharged/Dismissed Bankruptcy Filings_Knockout_Failure2'
  
  WHEN MTF8169 <= 60 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'No_Foreclosure_60mo_Knockout_Failure'  
  WHEN MTF8169 > 60 AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'FORECLOSURE' THEN 'No_Foreclosure_60mo_Knockout_Failure2'
  
  WHEN type = 'FACTA_HIT' AND CAST(subcode AS FLOAT64) IN (16,23,26,28,31,33) AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'FACTA_Auto_Knockout_Failure' 
  WHEN type = 'FACTA_HIT' AND CAST(subcode AS FLOAT64) NOT IN (16,23,26,28,31,33) AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'FACTA_HIT' THEN 'FACTA_Auto_Knockout_Failure2'
  
  WHEN type = 'FRAUD_HIT' AND CAST(subcode AS FLOAT64) IN (5,25,13,14,27) AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Experian_Fraud_Shield_Knockouts_Failure'
  WHEN type = 'FRAUD_HIT' AND CAST(subcode AS FLOAT64) NOT IN (5,25,13,14,27) AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND r.decline_reason_code = 'FRAUD' THEN 'Experian_Fraud_Shield_Knockouts_Failure2'
 
  ELSE 'PASS'
  END AS Credit_Hard_Knockout_Failure_Check,
 
  (((((BCC5830 - BCC5838)/0.04)*0.025) + BCC5838) - (BCC5830 - BCX5830)) AS Z,
    
  CASE 
  WHEN  BCC5830 <= BCX5830 AND  CAST(la.credit_soft_fico AS FLOAT64) BETWEEN 620 AND 739 THEN  ROUND(( (((((BCC5830 - BCC5838)/0.04)*0.025) + BCC5838) - (BCC5830 - BCX5830)) + (BAX5030 - BCX5030)*0.025 + RTR5030 * 0.025), 4)
  WHEN BCC5830 <= BCX5830 AND  CAST(la.credit_soft_fico AS FLOAT64) >= 740 THEN ROUND( (((((BCC5830 - BCC5838)/0.04)*0.025) + BCC5838) - (BCC5830 - BCX5830)) + RTR5030 * 0.025, 4)
  END AS T_Monthly_Revolving_Debt,
  
  CASE 
  WHEN BCC5830 <= BCX5830 AND CAST(la.credit_soft_fico AS FLOAT64) BETWEEN 620 AND 739 THEN ROUND(ILN5820 -ILN5824, 4)
  WHEN BCC5830 <= BCX5830 AND CAST(la.credit_soft_fico AS FLOAT64) >= 740 THEN ROUND(AUA5820 + STU5020*0.0035 + (ILN5820 - (STU5820 + AUA5820)) - ILN5824,4)
  END AS T_Monthly_Installment_Debt,
  CASE 
  WHEN BCC5830 <= BCX5830 AND CAST(la.credit_soft_fico AS FLOAT64) BETWEEN 620 AND 739 THEN ROUND(MTF5820 + MTS5820 + HLC5820, 4)
  WHEN BCC5830 <= BCX5830 AND CAST(la.credit_soft_fico AS FLOAT64) >= 740 THEN ROUND(MTF5820 + MTS5820 + HLC5820, 4)
  END AS T_Monthly_Mortgage_Debt 
FROM reporting.lkup_application la  
JOIN rpt_staging.stg_uw_decision sud ON sud.application_uuid_value = la.application_uuid_value
JOIN (SELECT application_uuid_value, MTA2126,COL3211,ALM6270, IQT9425,IQM9415, IQA9415, IQF9415,ALL9220,ALL9120,ALL9121,ALL9122, MTF8169,BCC5830, BCX5830,ALX5830, ILN5824, BCC5838, BAX5030, BCX5030, RTR5030, ILN5820, AUA5820, STU5020, STU5820, MTF5820, MTS5820, HLC5820 FROM reporting.lkup_credit_attr WHERE product_type ='HELOC') lca ON lca.application_uuid_value = la.application_uuid_value
LEFT JOIN rpt_staging.stg_uw_decline_reasons r ON r.application_uuid_value = la.application_uuid_value
LEFT JOIN ( SELECT * FROM(
  SELECT 
  *,
  ROW_NUMBER() OVER (PARTITION BY application_uuid_value, subcode ORDER BY kafka_timestamp DESC) AS r
  FROM rpt_staging.stg_credit_soft_elig_factors
  WHERE type IN ( 'FRAUD_HIT','FACTA_HIT') AND subcode IS NOT NULL)
  WHERE  r = 1 ) s ON s.application_uuid_value = la.application_uuid_value
)
WHERE App_Start_Date > '2020-02-27'
ORDER BY App_Start_Date DESC)

SELECT * FROM credit

WHERE  Credit_Hard_Knockout_Failure_Check != 'PASS'

-- F0 AS (
-- SELECT
--   c.*,
--   ad.calc_monthly_debt,
--   ad.calc_monthly_debt_v2,
--   CASE 
--   WHEN BCC5830 > BCX5830 THEN ALX5830 - ILN5824
--   ELSE (COALESCE(T_Monthly_Revolving_Debt,0) + COALESCE(T_Monthly_Installment_Debt,0) + COALESCE(T_Monthly_Mortgage_Debt,0))
--   END AS T_Monthly_Debt,

--   sud.uw_packet_home_amount AS UW_Packet_Home_Amount, 
--   CASE 
--   WHEN lp.avm_value_amount IS NULL OR (lp.avm_value_amount >= sud.uw_packet_home_amount) THEN  ROUND(sud.uw_packet_home_amount,4) ELSE ROUND(lp.avm_value_amount,4) END AS T_AVM_Value,
--   sud.avm_fsd AS AVM_FSD,
--   IFNULL(lp.avm_fsd, lp.prequal_avm_fsd) AS T_FSD,
--   verified_income_amount AS Verified_Income_Amount, 
  
--   CASE 
--   WHEN c.age <= 59.5 THEN (verified_asset_depletion_retirement_amount*0.7) + verified_asset_depletion_investment_amount + verified_asset_depletion_savings_amount
--   ELSE verified_asset_depletion_retirement_amount + verified_asset_depletion_investment_amount + verified_asset_depletion_savings_amount
--   END AS T_Total_Assets,
  
--   verified_asset_depletion_retirement_amount AS Verified_Asset_Depletion_Retirement_Amount, 
--   verified_asset_depletion_savings_amount AS Verified_Asset_Depletion_Savings_Amount,
--   verified_asset_depletion_investment_amount AS Verified_Asset_Depletion_Investment_Amount,
--   la.uw_packet_amt_owed AS Amount_Owed,
--   la.adjusted_home_amount AS Adjusted_Home_Amount, 
--   CAST(ad.avm_value_amount AS FLOAT64) AS AVM_Value_Amount,
--   CAST(ad.prequal_avm_amount AS FLOAT64) AS Prequal_AVM_Amount,
--   lp.land_use_code AS Land_Use_Code,
--   lp.acres AS Acres,
--   h.mortgage_status_indicator AS Mortgage_Status_Indicator,
--   h.mortgage_payoff_date AS Mortgage_Payoff_Date,
--   h.mortgage_origination_date AS Mortgage_Origination_Date,
--   h.mortgage_recording_date AS Mortgage_Recording_Date,
--   lp.avm_last_sale_date AS AVM_Last_Sale_Date,
--   lp.current_transfer_sale_date AS Current_Transfer_Sale_Date,
--   lp.last_market_sale_date AS Last_Market_Sale_Date,
  
--   SAFE_CAST(h.mortgage_lien_position AS FLOAT64) AS Mortgage_Lien_Position,

--   t.lien_position AS DT_Lien_Position,
--   slp.lien_position AS UW_Lien_Position,
--   CAST(sud.tot_open_balance AS FLOAT64) AS Tot_Open_Balance,
--   CAST(sud.all_mort_balance AS FLOAT64) AS All_Mort_Balance,
 
--   CASE WHEN (CAST(ad.prequal_avm_amount AS FLOAT64) IS NULL AND CAST(ad.avm_value_amount AS FLOAT64) IS NULL) AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'AVM_Knockout_Failure'
--   WHEN ((CAST(lp.land_use_code AS FLOAT64) NOT IN(102,112,148,163) AND c.App_Start_Date <= '2020-03-21') OR (CAST(lp.land_use_code AS FLOAT64) NOT IN(102,112,163) AND c.App_Start_Date >'2020-03-21'))  AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Land_Use_Code_Knockout_Failure'
--   WHEN CAST(uw_packet_acres AS FLOAT64) > 20 AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Acres_Knockout_Failure'
--   WHEN (SAFE_CAST(h.mortgage_lien_position AS FLOAT64) > 2 AND c.App_Start_Date >= '2020-04-28')  AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Lien_Position_Knockout_Failure'
  
--   WHEN (SAFE_CAST(h.mortgage_lien_position AS FLOAT64) <= 2 AND c.App_Start_Date >= '2020-04-28')  AND la.uw_decision_decision = 'DECLINE' AND la.status IN ('DECLINED', 'CANCELLED') AND Decline_Code = 'LIEN_POSITION' THEN 'Lien_Position_Knockout_Failure2'
  
--   WHEN (DATE_DIFF(CURRENT_DATE(), SAFE_CAST(COALESCE(lp.avm_last_sale_date, lp.current_transfer_sale_date, lp.last_market_sale_date) AS DATE), day) <= 90)  AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED') THEN 'Last_Sale_Date_Knockout_Failure'
--   WHEN (h.mortgage_status_indicator IN ('F','U') AND h.mortgage_payoff_date IS NULL 
--   AND (h.mortgage_recording_date IS NOT NULL AND h.mortgage_origination_date IS NOT NULL) 
--   AND  SAFE_CAST(h.mortgage_origination_date AS DATE) >= SAFE_CAST(COALESCE(lp.avm_last_sale_date, lp.current_transfer_sale_date, lp.last_market_sale_date) AS DATE)
--   AND  SAFE_CAST(h.mortgage_recording_date AS DATE) >= SAFE_CAST(COALESCE(lp.avm_last_sale_date, lp.current_transfer_sale_date, lp.last_market_sale_date) AS DATE))
--   AND la.uw_decision_decision != 'DECLINE' AND la.status NOT IN ('DECLINED', 'CANCELLED')
--   THEN 'Foreclosure_Knockout_Failure'
--   ELSE 'PASS'
--   END AS Property_Eligibility_Knockout_Failure_Check,
  
--   s.lien_summary.involuntary_lien.lien_on_property AS Involuntary_Lien_On_Property, 
--   s.lien_summary.hoa_lien.lien_on_property AS HOA_Lien_On_Property,
--   il.involuntary_lien_info.involuntary_lien_item.document_category AS Document_Category, 
--   il.involuntary_lien_info.involuntary_lien_item.document_description AS Document_Description, 
--   CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE) AS Document_Date,
--   il.involuntary_lien_info.state_code AS State_Code, 
--   s.property_status_indicators.is_pace_lien AS Is_Pace_Lien,
--   CASE WHEN s.lien_summary.involuntary_lien.lien_on_property IS TRUE OR s.lien_summary.hoa_lien.lien_on_property IS TRUE THEN 'YES' ELSE 'NO' END AS Involuntary_Lien_Exists, 
--   CASE WHEN (
--   FICO >= 680 AND 
--  (il.involuntary_lien_info.involuntary_lien_item.document_category = 'NOTICE' AND il.involuntary_lien_info.involuntary_lien_item.document_description = 'NOTICE') 
--   AND s.property_status_indicators.is_pace_lien IS FALSE) IS TRUE THEN 'YES' ELSE 'NO' END AS Exception1_Exists, 
--   CASE WHEN 
--   (il.involuntary_lien_info.involuntary_lien_item.document_category = 'FEDERAL TAX LIEN' AND DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 120) IS TRUE
--   OR
--   (il.involuntary_lien_info.involuntary_lien_item.document_category = 'MECHANICS LIEN' AND DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 24) IS TRUE
--   OR
--   (il.involuntary_lien_info.involuntary_lien_item.document_category = 'STATE TAX LIEN' AND il.involuntary_lien_info.state_code IN('NH', 'IL', 'CA', 'NJ', 'VA', 'WI', 'FL', 'HI', 'CT', 'OH', 'VT', 'IA', 'KY', 'LA', 'MD') AND DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 240) IS TRUE
--   OR 
--   (il.involuntary_lien_info.involuntary_lien_item.document_category = 'STATE TAX LIEN' AND il.involuntary_lien_info.state_code IN('AL', 'AZ', 'AR', 'DE', 'IN', 'ME', 'MA', 'MN', 'NM', 'TN', 'WA', 'WY', 'WV', 'KS', 'SC', 'GA', 'OK', 'NE') AND DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 120) IS TRUE
--   OR  
--   (il.involuntary_lien_info.involuntary_lien_item.document_category = 'STATE TAX LIEN' AND il.involuntary_lien_info.state_code IN('SD', 'UT', 'ID', 'CO', 'MI', 'MS') AND DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 84) IS TRUE
--   OR  
--   (il.involuntary_lien_info.involuntary_lien_item.document_category IN ('JUDGMENT', 'LIEN') AND il.involuntary_lien_info.state_code IN('MD', 'DC', 'NM', 'KY', 'ME', 'MA', 'CT', 'NJ', 'RI') AND DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 240) IS TRUE
--   OR
--   (il.involuntary_lien_info.involuntary_lien_item.document_category IN ('JUDGMENT', 'LIEN') AND il.involuntary_lien_info.state_code IN('AR', 'AL', 'IA','DE', 'IN', 'MN', 'TN', 'WA', 'WV', 'SC', 'CA', 'FL', 'VA', 'WI', 'SD', 'LA', 'TX', 'MT', 'NC', 'OR', 'MO', 'AZ', 'UT', 'VT', 'AK') AND 
--   DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 120) IS TRUE
--   OR 
--   (il.involuntary_lien_info.involuntary_lien_item.document_category IN ('JUDGMENT', 'LIEN') AND il.involuntary_lien_info.state_code IN('WY', 'KS', 'OK', 'OH', 'ID', 'MI', 'PA', 'NE', 'NH', 'CO', 'NV', 'GA', 'IL', 'MI')
--   AND 
--   DATE_DIFF(Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) > 84) IS TRUE THEN 'YES' ELSE 'NO' END AS Exception2_Exists, 
  
--   CASE WHEN (il.involuntary_lien_info.involuntary_lien_item.document_category IN ('FEDERAL TAX LIEN', 'MECHANICS LIEN', 'STATE TAX LIEN','JUDGMENT', 'LIEN') AND  CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE) IS NULL) THEN 'YES' ELSE 'NO' END AS Exception3_Exists,  
--   DATE_DIFF( Current_Date, CAST(il.involuntary_lien_info.involuntary_lien_item.document_date.value AS DATE), MONTH) AS Date_Difference_By_Month,  
--   la.pre_loan_cltv AS Pre_Loan_CLTV,
--   la.Pre_Loan_Adj_CLTV,
--   la.Pre_Loan_DTI
-- FROM reporting.application_details ad
-- JOIN reporting.lkup_datatree_summary s ON s.application_uuid.value = ad.application_uuid_value
-- JOIN reporting.lkup_datatree_involuntary_liens il ON il.application_uuid.value = ad.application_uuid_value
-- JOIN reporting.lkup_application la ON la.application_uuid_value = ad.application_uuid_value
-- JOIN reporting.lkup_property lp ON lp.property_uuid_value = ad.property_uuid_value
-- JOIN reporting.f_heloc_property_financial_history h ON h.application_uuid = ad.application_uuid_value
-- JOIN rpt_staging.stg_uw_decision sud ON sud.application_uuid_value = ad.application_uuid_value
-- JOIN Credit c ON c.App_UUID = s.application_uuid.value
-- LEFT JOIN rpt_staging.stg_lien_position slp ON slp.application_uuid_value = ad.application_uuid_value
-- LEFT JOIN staging_evolved.property_data_proto_external_property_datatree_total_view_report_r1 dt ON dt.application_uuid.value = ad.application_uuid_value
-- LEFT JOIN UNNEST(transaction) AS t
-- )

-- SELECT 
--   DISTINCT( App_UUID), App_Start_Date, App_Amount, App_Status,	UW_Decision,	Decline_Code,	Decline_Reasons,State, FICO, All_Mortgage_Count,Amount_Owed, Tot_Open_Balance, All_Mort_Balance,	Mortgage_Status_Indicator,	Mortgage_Payoff_Date,	Mortgage_Origination_Date,	Mortgage_Recording_Date,	AVM_Last_Sale_Date,	Current_Transfer_Sale_Date,	Last_Market_Sale_Date,	Mortgage_Lien_Position,	DT_Lien_Position, UW_Lien_Position

-- FROM F0
-- WHERE 
--  Credit_Hard_Knockout_Failure_Check IN ('FICO_Knockout_Failure2', 'FICO_Knockout_Failure' )
-- -- AND App_UUID = 'c9c6b7b2-cc17-49e2-812e-6db540109c4b'
-- -- Credit_Hard_Knockout_Failure_Check != 'PASS' OR Property_Eligibility_Knockout_Failure_Check != 'PASS'
-- ORDER BY App_start_date DESC
